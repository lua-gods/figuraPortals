local screens = require "screens"

local size = vec(4, 4)
local offset = size * 8
local circleSize = 24
-- local function circle(pos, size)
--    return (vec(
--       math.clamp(pos.x, 0, size.x * 16),
--       math.clamp(pos.y, 0, size.y * 16)
--    ) - offset):clampLength(0, circleSize) + offset
-- end
local function circle(pos, size)
   return (pos - offset):clampLength(0, circleSize) + offset
end

function events.entity_init()
   -- local screen = screens.newScreen(size, vec(-231, 66, 170), vec(0, 45, 0), vec(-231, 63, 147), vec(0, 0, 180))
   -- screen.clampFunc = circle
   -- screens.newScreen(player:getPos():add(1, 4, 2):floor(), vec(4, 4), vec(0, 0, 0))
   -- screens.newScreen(player:getPos():add(1, 4, 2):floor(), vec(4, 4), vec(0, 0, 0))
   -- screens.newScreen(vec(8182097 + 8, 15, 8181874):floor(), vec(4, 4), vec(20, 45, 45))
   -- local pos = vec(8182097 + 8, 15, 8181874)
   -- local screen = screens.newScreen(vec(4, 4), pos, vec(0, 0, 0), vec(8182097, 15, 8181874), vec(0, 0, 0))
   -- local t = 0
   -- local speed = 0.005

   -- screen.clampFunc = circle

   -- function events.tick()
   --    t = t + speed
   --    t = t % 1.5
   -- end

   -- function events.world_render(delta)
   --    local time = t + delta * speed
   --    time = math.clamp(time - 0.25, 0, 1)
   --    local r = 2 * time ^ 2
   --    if time > 0.5 then
   --       r = 1 - 2 * (time - 1) ^ 2
   --    end
   --    r = r * 360 * 4
      
   --    screen.rot.z = r
   --    screen.pos = pos + vec(2, 2, 0) * matrices.rotation3(0, 0, r)
   -- end
   -- screen.clampFunc = circle
   -- screens.newScreen(vec(5, 4), vec(-231, 67, 147), vec(90, 0, 45), vec(-231, 67, 170), vec(0, 45, 0))
   -- screens.newScreen(vec(8, 2), vec(-261.99, 76, 14), vec(0, -90, 0), vec(-261, 77, -13), vec(0, 90, 0))
   -- screens.newScreen(vec(5, 3), vec(16166, 52, 5769), vec(0, 90, 0), vec(16155, 52, 5789), vec(0, -90, 0)).clampFunc = circle

   -- screens.newScreen(vec(1, 2), vec(8182008, -12, 8181863), vec(0, 90, 0), nil, nil, false, true)
   -- screens.newScreen(vec(1, 2), vec(8182012, -11, 8181869), vec(0, 0, 0), nil, nil, false, true)
   -- screens.newScreen(vec(1, 2), vec(8182012, -11, 8181869), vec(0, 0, 0), nil, nil, false, true)
   screens.newScreen(vec(5, 5), vec(8182007, -9, 8181856), vec(-90, 0, 0), nil, nil, false, true)
   -- .clampFunc = function(p) return p end
end

-- local time = 0
-- function events.tick()
--    time = time + 1
-- end

-- function events.world_render(delta)
--    circleSize = (math.cos((time + delta) * 0.1) * 0.5 + 0.5) * 24
-- end